WEBVTT

1
00:00:00.340 --> 00:00:02.600
In this lecture, we'll cover one of the
most fundamental things that

2
00:00:02.600 --> 00:00:05.510
you can do with GitHub, which is creating
a repository, or a repo.

3
00:00:05.510 --> 00:00:10.270
So, just to, recap, to refresh your
memory, so

4
00:00:10.270 --> 00:00:12.460
we have two pieces of software that we
talked about.

5
00:00:12.460 --> 00:00:15.170
So, Git is a piece of software that allows
you

6
00:00:15.170 --> 00:00:18.380
to do version control of documents, like
on your local computer.

7
00:00:18.380 --> 00:00:21.510
And then GitHub is a piece of software
that allows you, well, it's a

8
00:00:21.510 --> 00:00:23.710
web service, that allows you to, deal

9
00:00:23.710 --> 00:00:26.170
with repos or repositories, remotely, on
the web.

10
00:00:27.170 --> 00:00:29.660
So get GitHub allows you to share your
repository's with

11
00:00:29.660 --> 00:00:34.270
others, access other users public
repositories, and then store copies

12
00:00:34.270 --> 00:00:37.330
of your local repo's on the server in case
something

13
00:00:37.330 --> 00:00:40.009
happens to your local version, you have a
back up copy.

14
00:00:41.602 --> 00:00:45.240
So, there's a couple of different ways of
creating a GitHub repository.

15
00:00:45.240 --> 00:00:48.140
One is you can start a repository from
scratch, that's creating

16
00:00:48.140 --> 00:00:53.360
your own repo, and another is you can fork
another user's repository.

17
00:00:53.360 --> 00:00:55.320
So we'll start off with the first method
which is

18
00:00:55.320 --> 00:00:57.720
just creating your own repo from scratch
and then we'll

19
00:00:57.720 --> 00:00:59.930
talk a little bit about how you can Fork
or

20
00:00:59.930 --> 00:01:03.590
get information from another user and
start working on their project.

21
00:01:03.590 --> 00:01:06.020
So key point to keep in mind is that

22
00:01:06.020 --> 00:01:09.380
when people talk about repositories, they
often call, use repo.

23
00:01:11.520 --> 00:01:13.210
So, what you can do is, either go to your

24
00:01:13.210 --> 00:01:17.520
profile page, which is going to be
github.com followed by your username.

25
00:01:17.520 --> 00:01:19.250
And click on create a new repo in the

26
00:01:19.250 --> 00:01:22.080
upper right hand corner of the page, or
you could

27
00:01:22.080 --> 00:01:26.940
go directly to github.com/new you'll need
to log in to

28
00:01:26.940 --> 00:01:29.720
your GitHub account if you want to do this
second version.

29
00:01:31.830 --> 00:01:33.600
So, the first thing you need to do is
create a

30
00:01:33.600 --> 00:01:37.380
name for your repo, and type a brief
description so make

31
00:01:37.380 --> 00:01:39.700
your name a good idea is to make the name
of

32
00:01:39.700 --> 00:01:43.080
the repo Googleable if you want to share
it with other people.

33
00:01:43.080 --> 00:01:46.210
And then have a description that's pretty
clear and descriptive of the things

34
00:01:46.210 --> 00:01:48.870
that you're going to be trying to do with
the full files in that folder.

35
00:01:49.920 --> 00:01:52.385
And then one thing that you can do is

36
00:01:52.385 --> 00:01:56.430
you can select either a public or a
private repo.

37
00:01:56.430 --> 00:01:58.630
Public repos are the default, and they're
the free

38
00:01:58.630 --> 00:02:01.250
version, and they can be shared with
anybody else.

39
00:02:01.250 --> 00:02:05.970
Private repos usually require a paid
account but if you are at

40
00:02:05.970 --> 00:02:09.410
an educational institution you can often
request up to five private repos.

41
00:02:09.410 --> 00:02:15.890
So then you definitely want to check the
box with initialize this re, repository

42
00:02:15.890 --> 00:02:18.590
with a README and click the Create
repository button down at the bottom.

43
00:02:20.570 --> 00:02:23.710
So after you've done that, you've created
your first GitHub repository.

44
00:02:23.710 --> 00:02:30.150
So you can see that right now this is a
file that's a repo, and Nick Carchetti.

45
00:02:31.610 --> 00:02:35.670
repo, and so you can see that it has a
README document.

46
00:02:35.670 --> 00:02:38.240
Because we initialized it with a README
file.

47
00:02:38.240 --> 00:02:41.030
And so the read me file, if you initiate
with the README file, that

48
00:02:41.030 --> 00:02:47.490
will actually be what is, what you observe
right here is the README file contents.

49
00:02:47.490 --> 00:02:50.680
And we'll talk a little bit more about how
you can use mark down to

50
00:02:50.680 --> 00:02:54.650
create a sort of a README file that makes
the repository very easy to understand.

51
00:02:57.620 --> 00:02:59.700
Now you can create a copy of this repo on

52
00:02:59.700 --> 00:03:01.650
your computer, so that you can make
changes to it.

53
00:03:01.650 --> 00:03:04.700
So you can open Git Bash, and create a
directory on

54
00:03:04.700 --> 00:03:08.190
your computer where you will store your
copy of the repo.

55
00:03:08.190 --> 00:03:13.710
So, for example you can do mkdir and then,
here it's in your home directory

56
00:03:13.710 --> 00:03:19.390
creating test-repo, and then navigate to
this new directory using cd.

57
00:03:20.480 --> 00:03:25.040
And then what you can do is, you can
initialize a local get repository by

58
00:03:25.040 --> 00:03:27.580
using the command get init, if you've
installed

59
00:03:27.580 --> 00:03:29.740
get, as we've talked about previously in
our

60
00:03:32.090 --> 00:03:34.530
previous lectures on Git, and then you can

61
00:03:34.530 --> 00:03:37.000
point your local repository to the remote
repository.

62
00:03:37.000 --> 00:03:38.440
In other words, you can link up your

63
00:03:38.440 --> 00:03:42.310
local repository with the remote GitHub
repository by typing

64
00:03:42.310 --> 00:03:46.350
git remote add origin, and then the URL

65
00:03:46.350 --> 00:03:50.870
of the remote repository that you created
on GitHub.

66
00:03:50.870 --> 00:03:55.030
Now you've linked up your local copy with
your remote version of GitHub.

67
00:03:57.100 --> 00:04:00.830
So, what you can do is, you can actually,
here's what it looks like in action.

68
00:04:00.830 --> 00:04:07.680
So this is actually a re-creating a repo
and then cd'ing that repo and

69
00:04:07.680 --> 00:04:13.400
then setting it up so it's connected to
the remote version of that repo as well.

70
00:04:13.400 --> 00:04:13.900
So,

71
00:04:16.170 --> 00:04:19.520
another thing that you can do is fork
another user's repository or repo.

72
00:04:19.520 --> 00:04:22.150
And so, the idea here is that what you
want to

73
00:04:22.150 --> 00:04:26.270
be able to do is develop software with
other people.

74
00:04:26.270 --> 00:04:29.240
So, they'll have repos that they've
already created that are on GitHub.

75
00:04:29.240 --> 00:04:32.160
Once you find one of those that you're
interested in, you can

76
00:04:32.160 --> 00:04:36.480
go to the, that repository and then you
can click the Fork button,

77
00:04:36.480 --> 00:04:39.200
and so what the Fork button will do is, it
will create a

78
00:04:39.200 --> 00:04:46.430
copy of that repo as it currently is
situated in your GitHub profile.

79
00:04:46.430 --> 00:04:49.450
So now you have it on your GitHub account.

80
00:04:49.450 --> 00:04:52.380
And so, you can make a local copy, so you
can

81
00:04:52.380 --> 00:04:57.260
clone the repo down to your compu,
computer by using the command.

82
00:04:57.260 --> 00:05:00.990
Git clone, and that will take your local
version of

83
00:05:00.990 --> 00:05:04.540
your, or sorry, the remote version of your
repo and clone

84
00:05:04.540 --> 00:05:07.250
it down to your computer It will, if you
use the

85
00:05:07.250 --> 00:05:10.580
command like this it will clone to your
current working directory.

86
00:05:10.580 --> 00:05:12.850
And then what you can do is you can
actually work on that and try to

87
00:05:12.850 --> 00:05:16.710
contribute back to the repo, with and hope

88
00:05:16.710 --> 00:05:18.350
that they'll use the changes that you
made.

89
00:05:19.660 --> 00:05:21.700
If you made changes to your local copy,

90
00:05:21.700 --> 00:05:23.960
you'll want to push your changes to
GitHub.

91
00:05:23.960 --> 00:05:28.630
You may be interested in staying current
with the changes using your forked copy.

92
00:05:28.630 --> 00:05:30.720
We'll cover some more of the Git and

93
00:05:30.720 --> 00:05:33.950
GitHub basics in coming lectures, but,
really the

94
00:05:33.950 --> 00:05:38.650
basic, the best place to find all this
sort of information is to look at these

95
00:05:38.650 --> 00:05:45.400
tutorials right here both on GitHub and on
the Git website which gives you a lot

96
00:05:45.400 --> 00:05:48.680
of information about how you Fork and
clone

97
00:05:48.680 --> 00:05:51.500
and all the other components of using
GitHub.