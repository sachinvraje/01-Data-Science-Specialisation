WEBVTT

1
00:00:00.950 --> 00:00:04.430
This is a very brief introduction to the
Git Version Control System.

2
00:00:05.460 --> 00:00:07.680
So Version Control is a system that
records

3
00:00:07.680 --> 00:00:09.110
all the changes that you've made to a

4
00:00:09.110 --> 00:00:13.530
file or a set o files over time so that
you can, recall specific versions later.

5
00:00:13.530 --> 00:00:17.450
It's one of the most commonly used tools
for data scientists because,

6
00:00:17.450 --> 00:00:19.730
often you'll be working on a set of
scripts or a set of

7
00:00:19.730 --> 00:00:23.300
programs, and you'll make changes to them
and over time, some of

8
00:00:23.300 --> 00:00:26.270
those changes will be good, and some of
those changes will be bad.

9
00:00:26.270 --> 00:00:29.480
And maybe other people will be working at
the same time on a similar set of

10
00:00:29.480 --> 00:00:30.810
functions that you want to be able to keep

11
00:00:30.810 --> 00:00:32.870
track of everything that's being done to
those files.

12
00:00:34.530 --> 00:00:38.720
So, many of the ways, the way that many of
us work with

13
00:00:38.720 --> 00:00:42.060
files, whether we create something, we
save it, we change it and we save

14
00:00:42.060 --> 00:00:46.350
it again, and then when you, what happens
is you'll lose those intermediate files,

15
00:00:46.350 --> 00:00:51.030
the files that you saved in between the
final version and the first version.

16
00:00:51.030 --> 00:00:53.550
And so, Version Control means we're just
going to try

17
00:00:53.550 --> 00:00:57.030
and save or manage all of those
intermediate files.

18
00:00:57.030 --> 00:00:59.580
And it's really important when you're sort
of collaborating

19
00:00:59.580 --> 00:01:02.850
with others because, they might be using
as, a different

20
00:01:02.850 --> 00:01:04.940
intermediate file and you might want to
know how to

21
00:01:04.940 --> 00:01:07.450
coordinate what happened when you get to
the final version.

22
00:01:09.030 --> 00:01:13.410
So Git is a free and open source version
of of a version control system.

23
00:01:13.410 --> 00:01:16.130
It's distributed so it can handle
everything from

24
00:01:16.130 --> 00:01:19.340
small to very large projects with speed
and efficiency.

25
00:01:19.340 --> 00:01:23.390
It's one of the most commonly used sort of
version control systems right now.

26
00:01:24.740 --> 00:01:28.310
It's created by the same people who
developed Linux.

27
00:01:28.310 --> 00:01:31.610
It's definitely the most popular version
control today compared

28
00:01:31.610 --> 00:01:33.830
to all the other version control systems
like SVN.

29
00:01:35.050 --> 00:01:37.090
Everything is stored in local
repositories,

30
00:01:37.090 --> 00:01:38.850
or on your computer, and they're called

31
00:01:38.850 --> 00:01:43.730
repos and then you do most of the
operations from the command line.

32
00:01:43.730 --> 00:01:47.160
And so this is the link I've given you
here is a, sort

33
00:01:47.160 --> 00:01:50.940
of a short history of how Git was
developed, and how to get started.

34
00:01:51.960 --> 00:01:54.880
So, the first thing that you need to do is
go and get, download Git.

35
00:01:54.880 --> 00:01:58.960
So I've given you the website that you can
see right here.

36
00:01:58.960 --> 00:02:02.720
So, if you go to that website and download
the appropriate version of

37
00:02:02.720 --> 00:02:06.070
the software for your operating system,
that would be the right place to start.

38
00:02:07.850 --> 00:02:09.500
The next thing that you do is, once it's

39
00:02:09.500 --> 00:02:12.010
done downloading, you open it up and you
begin

40
00:02:12.010 --> 00:02:14.940
the installation process, so there'll be
an install wizard

41
00:02:14.940 --> 00:02:17.350
that will take you through the steps of
installing Git.

42
00:02:19.050 --> 00:02:21.570
Unless you really know what you're doing,
you should probably just go

43
00:02:21.570 --> 00:02:25.140
with all the default options at each step
of the installation process.

44
00:02:26.950 --> 00:02:31.520
Once the installation is finished, you
might want to hit

45
00:02:31.520 --> 00:02:35.330
the Finish button, although you may
want to check uncheck

46
00:02:35.330 --> 00:02:38.220
the box next to review the release notes
because

47
00:02:38.220 --> 00:02:40.550
you probably won't be interested in that
at this point.

48
00:02:41.980 --> 00:02:45.570
So the first thing that you want to do is
open up a program

49
00:02:45.570 --> 00:02:49.420
called Git Bash which is the command line
enr, environment for interacting with Git.

50
00:02:49.420 --> 00:02:53.504
This is particularly true if you're on
Windows users.

51
00:02:53.504 --> 00:02:56.936
It should be loca, located in to the
directory in which Git was

52
00:02:56.936 --> 00:03:00.899
installed or for Windows users, it will be
in the Start menu now.

53
00:03:00.899 --> 00:03:03.764
[BLANK_AUDIO]

54
00:03:03.764 --> 00:03:07.732
So, once you have Git Bash open you'll see
a short welcome message followed

55
00:03:07.732 --> 00:03:11.480
by the name of your computer and a dollar
sign on the next line.

56
00:03:12.650 --> 00:03:17.400
And so the dollar sign means that it's
again, the prompt like you've seen in

57
00:03:17.400 --> 00:03:20.820
the sort of command line interface lecture
and so, it's your turn to type a command.

58
00:03:21.920 --> 00:03:24.540
And so, each commit to a Git repository
will

59
00:03:24.540 --> 00:03:27.170
be tagged with the username of the person
the commit.

60
00:03:28.390 --> 00:03:30.030
So what you need to do to sort of get
things

61
00:03:30.030 --> 00:03:34.510
set up is, you need to enter your username
and your e-mail.

62
00:03:34.510 --> 00:03:40.160
So you type these commands where you type
Git config dash global username.

63
00:03:40.160 --> 00:03:45.350
And here you want to type in your username
that you're going to be using.

64
00:03:45.350 --> 00:03:48.340
And then, you do the same thing only user
dot email.

65
00:03:48.340 --> 00:03:50.080
And here, you're going to type in the
email

66
00:03:50.080 --> 00:03:51.200
that you're going to be using with GitHub.

67
00:03:51.200 --> 00:03:54.270
You only have to do this once when the
system opens

68
00:03:54.270 --> 00:03:56.480
up, but you can always change it down the
road if

69
00:03:56.480 --> 00:03:59.640
you want to use the same commands, if you
want to change say

70
00:03:59.640 --> 00:04:02.962
your user name or the email that's
associated with the Git account.

71
00:04:05.038 --> 00:04:07.150
Now type the following to confirm your
changes.

72
00:04:07.150 --> 00:04:09.845
So, what you do is you just type git
config

73
00:04:09.845 --> 00:04:13.235
dot dash dash list, like I see, like you
see here.

74
00:04:13.235 --> 00:04:16.904
And, so, you should be able to see your
username and your email and all of that.

75
00:04:16.904 --> 00:04:19.730
[BLANK_AUDIO]

76
00:04:19.730 --> 00:04:23.188
So right now we're actually going to
actually just exit Git Bash.

77
00:04:23.188 --> 00:04:28.010
And so so you can do that with this
command, just type exit and hit return.

78
00:04:28.010 --> 00:04:31.470
So now that Git is setup on your computer
,we're going to do, do some lectures

79
00:04:31.470 --> 00:04:35.900
on how do you use GitHub, which is a web
development tool for dealing with GitHub.

80
00:04:35.900 --> 00:04:39.740
It's dealing with Git, it's widely, widely
used

81
00:04:39.740 --> 00:04:43.040
among scientists and does lots of neat
stuff.

82
00:04:43.040 --> 00:04:45.800
And so, once that's up and running we'll
show you how to do some

83
00:04:45.800 --> 00:04:48.660
of the most important things that you need
to do with the Version Control System.