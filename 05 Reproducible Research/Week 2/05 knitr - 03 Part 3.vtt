WEBVTT

1
00:00:00.620 --> 00:00:03.100
So how do we create a basic knitr
document?

2
00:00:03.100 --> 00:00:05.010
So I'm going to talk about this in the
context of R

3
00:00:05.010 --> 00:00:07.830
studio, because I think it's the easiest
way to do it.

4
00:00:07.830 --> 00:00:10.890
There are other ways to do this, so this
is not really exclusive to R studio

5
00:00:10.890 --> 00:00:15.110
but it's going to, I'll just, the example
that I'll show you will be in R studio.

6
00:00:15.110 --> 00:00:18.520
So if you click on the New Document button
on the

7
00:00:18.520 --> 00:00:21.042
upper left, you'll see that there are a
variety of options.

8
00:00:21.042 --> 00:00:26.220
And you can click the R Markdown option to
to

9
00:00:26.220 --> 00:00:31.250
create a new markdown file that'll have
your text and codes.

10
00:00:31.250 --> 00:00:34.950
Here's your basic mark, R markdown
document.

11
00:00:34.950 --> 00:00:38.950
So R markdown is basically markdown with R
code embedded in it.

12
00:00:38.950 --> 00:00:42.040
You can see that what I have here is a

13
00:00:42.040 --> 00:00:45.550
basic symbol that indicates that I'm
going to start a code chunk.

14
00:00:45.550 --> 00:00:48.110
So when I have the three back ticks, then
the curly braces, and

15
00:00:48.110 --> 00:00:51.330
an r, and then a close curly brace, that
indicates that I'm starting

16
00:00:51.330 --> 00:00:52.570
a code chunk.

17
00:00:52.570 --> 00:00:55.030
So as you can see I have three lines of R
code here.

18
00:00:55.030 --> 00:00:58.030
Got set seed, that generates a random
normal var variables.

19
00:00:58.030 --> 00:00:59.510
And then I just take the mean.

20
00:00:59.510 --> 00:01:02.840
And then I close this code chunk with
three back ticks.

21
00:01:02.840 --> 00:01:06.710
And so that and so that's, and so you can
see above this shaded area

22
00:01:06.710 --> 00:01:11.410
with the code, I've got text, so it's, the
title is my first knitr document.

23
00:01:11.410 --> 00:01:14.600
And then I said, just a line of text that
says, this is some text.

24
00:01:14.600 --> 00:01:16.499
And I say, here's a code chunk, and then I
start the code chunk.

25
00:01:18.090 --> 00:01:22.670
So in R studio you'll have this document
open.

26
00:01:22.670 --> 00:01:25.810
And you'll have the the code chunk and the
text chunk there together.

27
00:01:25.810 --> 00:01:27.740
And and the idea is that if you want to

28
00:01:27.740 --> 00:01:30.920
process the knitr document, and create
some human-readable output.

29
00:01:30.920 --> 00:01:32.850
So, you want to, the idea is that you
want to run the R

30
00:01:32.850 --> 00:01:36.170
code, so that it, so you execute these
three lines of R code.

31
00:01:36.170 --> 00:01:39.230
And then you want to put the output from
that R code.

32
00:01:39.230 --> 00:01:41.270
In, in, embedded in your document.

33
00:01:41.270 --> 00:01:43.330
And what's the output of this R code?
Well there's only one

34
00:01:43.330 --> 00:01:45.170
thing that happens when you calculate the
mean.

35
00:01:45.170 --> 00:01:47.840
So it's going to generate the mean, and
it'll be whatever

36
00:01:47.840 --> 00:01:50.720
the mean happens to be for that simulated
data set.

37
00:01:50.720 --> 00:01:52.810
So it's very easy in R Studio, you can
just push

38
00:01:52.810 --> 00:01:56.080
the Knit HTML button, and it will
automatically run everything for you.

39
00:01:57.470 --> 00:01:59.900
There's if you're not using our studio the
way you

40
00:01:59.900 --> 00:02:01.580
can do this is you can load the knitr
package

41
00:02:01.580 --> 00:02:04.780
with a library function you can make sure
your working

42
00:02:04.780 --> 00:02:08.980
director is set to wherever the aardvark
down document is located

43
00:02:08.980 --> 00:02:13.070
typically aardvark down documents will
have a capital RMD extension.

44
00:02:13.070 --> 00:02:16.880
It's not necessary but it's just a good
way to identify these types of files.

45
00:02:16.880 --> 00:02:22.620
You can use the knit2html function if you
want to create a webpage as your output.

46
00:02:22.620 --> 00:02:26.440
And you will automatically process the r
markdown file and run

47
00:02:26.440 --> 00:02:28.120
the r code and put the r code within the
file.

48
00:02:28.120 --> 00:02:29.790
And then, within r, if you want to open
this

49
00:02:29.790 --> 00:02:32.430
in your web browser, you can use the
browseURL function.

50
00:02:32.430 --> 00:02:34.650
It will create a new file.

51
00:02:34.650 --> 00:02:39.110
Sorry, the knit2html function will take
your r markdown document, create a html

52
00:02:39.110 --> 00:02:42.340
file with the same name then, then you can
open in your web browser.

53
00:02:43.390 --> 00:02:45.145
So here's the output that you would get,
this

54
00:02:45.145 --> 00:02:46.870
is the HTML format output that you would
get.

55
00:02:46.870 --> 00:02:50.890
You can see there's a title in bold, in
large text, there's some regular text.

56
00:02:50.890 --> 00:02:54.330
The code is kind of in the shaded box, and
then the output from

57
00:02:54.330 --> 00:02:58.200
that code is directly below, here you can
see here the mean is 0.1089.

58
00:02:58.200 --> 00:02:59.980
So that's the output

59
00:02:59.980 --> 00:03:01.160
that came from the mean function.

60
00:03:04.850 --> 00:03:09.080
So in your MarkR, so that happens here is
that neither

61
00:03:09.080 --> 00:03:13.650
takes your original RMarkdown document, we
can see on the left here.

62
00:03:13.650 --> 00:03:18.280
And it processes it into a regular
Markdown document.

63
00:03:18.280 --> 00:03:21.820
As you can see that the, one thing that
happens is that, it takes your code.

64
00:03:21.820 --> 00:03:26.840
And then it, it reproduces the code in the
regular markdown document.

65
00:03:26.840 --> 00:03:27.740
But you can see that the in the

66
00:03:27.740 --> 00:03:30.120
markdown document there's one extra piece,
which is that

67
00:03:30.120 --> 00:03:32.150
the result of the code which is down here
at the bottom.

68
00:03:32.150 --> 00:03:34.630
And so the result of evaluating the r code
is

69
00:03:34.630 --> 00:03:38.870
added to the markdown document after
evaluating the r code.

70
00:03:40.910 --> 00:03:44.220
So so when you create, first couple of

71
00:03:44.220 --> 00:03:45.290
things, first of all when you generate,
when you

72
00:03:45.290 --> 00:03:49.270
create the new knitr document in RStudio,
it will

73
00:03:49.270 --> 00:03:52.640
populate that document with some kind of
generic filler text.

74
00:03:52.640 --> 00:03:54.570
So the first thing you probably want to do
just delete it, because

75
00:03:54.570 --> 00:03:57.480
that's not going to be relevant to
whatever you want to do, most likely.

76
00:03:58.622 --> 00:04:02.770
Code chunks begin, again, with the three
back ticks the curly braces with an r.

77
00:04:02.770 --> 00:04:05.890
And you end a code chunk with three back
ticks.

78
00:04:05.890 --> 00:04:07.960
All of your R code will go between these
markers.

79
00:04:07.960 --> 00:04:09.600
Now you can have more than one code chunk.

80
00:04:09.600 --> 00:04:11.080
You can have as many code chunks as you
want.

81
00:04:11.080 --> 00:04:15.695
So you don't have put all of the R code in
within the code chunk.

82
00:04:15.695 --> 00:04:20.150
But any R code that you do have goes in a
code chunk indicated by three back ticks.

83
00:04:20.150 --> 00:04:22.296
You can have names for your code chunks so
you

84
00:04:22.296 --> 00:04:25.196
can name them after so immediately after
the curly brace the

85
00:04:25.196 --> 00:04:27.110
r you can put a name it can be anything
you

86
00:04:27.110 --> 00:04:29.883
want and then you can close it with a
curly brace.

87
00:04:29.883 --> 00:04:30.939
And then by default

88
00:04:30.939 --> 00:04:35.361
the code in a code chunk will be echoed in
the output document so just like in the in

89
00:04:35.361 --> 00:04:38.001
the HTML document you saw that it echoed
the code

90
00:04:38.001 --> 00:04:40.550
and then it gave you the result of that
code.

91
00:04:40.550 --> 00:04:43.115
By default, you will, all the code chunks
you'll be

92
00:04:43.115 --> 00:04:45.900
able to see in the document, the code that
was produced.